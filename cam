function Vnly_findNearestEnemy()
    local ClosestDistance, ClosestPlayer = math.huge, nil
    local CenterPosition = Vector2.new(game:GetService("GuiService"):GetScreenResolution().X / 2, game:GetService("GuiService"):GetScreenResolution().Y / 2)

    for _, Player in ipairs(game:GetService("Players"):GetPlayers()) do
        if Player ~= game.Players.LocalPlayer then
            local Character = Player.Character
            if Character and Character:FindFirstChild("HumanoidRootPart") and Character:FindFirstChild("Humanoid") and Character.Humanoid.Health > 0 then
                local Position, IsVisibleOnViewport = workspace.CurrentCamera:WorldToViewportPoint(Character.HumanoidRootPart.Position)
                if IsVisibleOnViewport then
                    local Distance = (CenterPosition - Vector2.new(Position.X, Position.Y)).Magnitude
                    if Distance < ClosestDistance then
                        ClosestPlayer = Character.HumanoidRootPart
                        ClosestDistance = Distance
                    end
                end
            end
        end
    end

    return ClosestPlayer
end

function Vnly_getPredictedPosition(Player)
    local velocity = Player.Velocity or Vector3.new(0, 0, 0)
    local predictedPosition = Player.Position + (velocity * Camlock.Prediction.Multiplier)
    return predictedPosition
end

function Vnly_GetShakedVector3(Intensity)
    return Vector3.new(math.random(-Intensity * 1e9, Intensity * 1e9), math.random(-Intensity * 1e9, Intensity * 1e9), math.random(-Intensity * 1e9, Intensity * 1e9)) / 1e9;
end

-- Perform KO, Death, and Grab Checks
function Vnly_performChecks(Plr)
    if Camlock.Checks.CheckKoStatus and Plr and Plr.Character then
        local KOd = Plr.Character:WaitForChild("BodyEffects")["K.O"].Value
        local Grabbed = Plr.Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
        if Plr.Character.Humanoid.Health < 1 or KOd or Grabbed then
            enemyCamlock = nil
            Camlock.Active = false
            return true
        end
    end

    if Camlock.Checks.DisableOnTargetDeath and Plr and Plr.Character:FindFirstChild("Humanoid") then
        if Plr.Character.Humanoid.Health < 1 then
            enemyCamlock = nil
            Camlock.Active = false
            return true
        end
    end

    if Camlock.Checks.DisableOnPlayerDeath and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
        if game.Players.LocalPlayer.Character.Humanoid.Health < 1 then
            enemyCamlock = nil
            Camlock.Active = false
            return true
        end
    end

    return false
end

local enemyCamlock = nil
game:GetService("RunService").RenderStepped:Connect(function()
    if Camlock.Enabled and Camlock.Active and enemyCamlock and enemyCamlock.Parent and enemyCamlock.Parent:FindFirstChild("HumanoidRootPart") then
        if Vnly_performChecks(enemyCamlock.Parent) then
            return
        end

        local humanoidRootPart = enemyCamlock.Parent.HumanoidRootPart
        local predictedPosition = Vnly_getPredictedPosition(humanoidRootPart)

        local adjustedPosition = predictedPosition + Vector3.new(
            Camlock.Prediction.XOffset,
            Camlock.Prediction.YOffset,
            Camlock.Prediction.ZOffset
        ) + Vnly_GetShakedVector3(Camlock.Shake.Intensity)

        local camera = workspace.CurrentCamera
        local Main = CFrame.new(camera.CFrame.p, adjustedPosition)
        camera.CFrame = camera.CFrame:Lerp(Main, Camlock.Aimbot.CameraSmoothing, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
    end
end)

local UIS = game:GetService("UserInputService")
UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Camlock.Key then
        Camlock.Active = not Camlock.Active

        if Camlock.Active then
            enemyCamlock = Vnly_findNearestEnemy()
            if enemyCamlock and Camlock.NOTIF then
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Camlock",
                    Text = "Locked on: " .. tostring(enemyCamlock.Parent.Name),
                    Icon = "http://www.roblox.com/asset/?id=8850953349",
                    Duration = 1,
                })
            end
        else
            enemyCamlock = nil
            if Camlock.NOTIF then
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Camlock",
                    Text = "Unlocked Camlock",
                    Icon = "http://www.roblox.com/asset/?id=8850953349",
                    Duration = 1,
                })
            end
        end
    end
end)
