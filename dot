-- Updated Dotlock Toggle Logic
local Plr = nil
local enabled = false
local CC = game:GetService("Workspace").CurrentCamera
local mouse = game.Players.LocalPlayer:GetMouse()
local placemarker = Instance.new("Part", game.Workspace)

-- Function to create marker for Dotlock
function makemarker(Parent, Adornee, Color, Size, Size2)
    local e = Instance.new("BillboardGui", Parent)
    e.Name = "PP"
    e.Adornee = Adornee
    e.Size = UDim2.new(Size * DotCustomization.DotSize, Size2, Size * DotCustomization.DotSize, Size2)
    e.AlwaysOnTop = Dotlock.DOT

    local a = Instance.new("Frame", e)
    a.Size = UDim2.new(1, 0, 1, 0)
    a.BackgroundTransparency = 1

    -- Apply shape based on customization
    if DotCustomization.Shape == "Circle" then
        local uicorner = Instance.new("UICorner", a)
        uicorner.CornerRadius = UDim.new(1, 0)
    elseif DotCustomization.Shape == "Square" then
        -- No UICorner applied, so it remains a square
    elseif DotCustomization.Shape == "Skull" then
        local skull = Instance.new("ImageLabel", a)
        skull.Image = "http://www.roblox.com/asset/?id=8850953349" -- Skull shape asset
        skull.Size = UDim2.new(1, 0, 1, 0)
        skull.BackgroundTransparency = 1
        return skull
    end

    -- Create the outline
    local outline = Instance.new("UIStroke", a)
    if DotCustomization.Effects.Rainbow then
        spawn(function()
            while DotCustomization.Effects.Rainbow do
                outline.Color = getRainbowColor(tick())
                wait(0.1)
            end
        end)
    else
        outline.Color = DotCustomization.DotColor
    end

    outline.Thickness = DotCustomization.OutlineThickness
    outline.Transparency = DotCustomization.Transparency

    return e
end

-- Function to get the closest player to the cursor
function getClosestPlayerToCursor()
    local closestPlayer
    local shortestDistance = 9999  -- High initial value for shortest distance
    local CC = game:GetService("Workspace").CurrentCamera
    local mouse = game.Players.LocalPlayer:GetMouse()

    for i, v in pairs(game.Players:GetPlayers()) do
        if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("HumanoidRootPart") then
            local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude
            if magnitude < shortestDistance then
                closestPlayer = v
                shortestDistance = magnitude
            end
        end
    end
    return closestPlayer
end

-- Handle toggling Dotlock
game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
    if k == Dotlock.Key and Dotlock.Enabled then
        if enabled == true then
            enabled = false
            Plr = nil -- Clear the locked player when untoggling
            if Dotlock.NOTIF == true then
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Vnly Ware",
                    Text = "Unlocked Dot Lock",
                    Icon = "http://www.roblox.com/asset/?id=8850953349",
                    Duration = 1,
                })
            end
        else
            Plr = getClosestPlayerToCursor()
            enabled = true
            if Plr and Dotlock.NOTIF == true then
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Vnly Ware",
                    Text = "Locked on: " .. tostring(Plr.Name), 
                    Icon = "http://www.roblox.com/asset/?id=8850953349",
                    Duration = 1,
                })
            end
        end
    end
end)

-- Update Dotlock Mouse Position only when enabled and locked on
game:GetService("RunService").Stepped:connect(function()
    if enabled and Plr and Plr.Character and Plr.Character:FindFirstChild("HumanoidRootPart") then
        placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position + (Plr.Character.HumanoidRootPart.Velocity * Dotlock.Prediction.PredictionValue))

        -- Update mouse position to the dot using UpdateMousePosI when locked
        local updateMousePosEvent = game.ReplicatedStorage:FindFirstChild("UpdateMousePosI2")
        if updateMousePosEvent then
            updateMousePosEvent:FireServer(placemarker.Position)
        end
    else
        -- Reset the placemarker's position when no player is locked
        placemarker.CFrame = CFrame.new(0, 9999, 0)
    end
end)
